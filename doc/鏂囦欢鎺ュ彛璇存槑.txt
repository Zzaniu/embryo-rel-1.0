
Copyright(c) 2019-2-12 Shangwen Wu	

	embryo可通过标准的unix文件接口（open/close/read/write/ioctl/lseek）来访问某些设备上的文件，在这里提到的文件不是一般意义的文件概念，它可以是tftp服务器上的文件，也可以是位于本地存储介质上的文件，还可以代表一个物理设备或者网络套接字。对于不同类型的文件，其接口产生的实际行为也不一样，其实现与底层高度相关。文件接口与Unix标准接口定义基本相同，但是在设备的定位和查找上存在重大区别，由于embryo本身不支持像OS那样的根文件系统，因此，对于open函数的文件路径参数中必须包含一些必要的与目标文件高度相关的信息，比如文件类型、文件存放位置，对于文件类型必须给出文件是设备或者一般文件的标志符，而对于一般文件除了给出具体存放路径还必须给出文件系统类型，此外，对于某些设备文件，还需要给出文件的访问方式，比如块访问还是字符访问，是原始访问还是带文件系统的访问方式。该路径参数是embryo自定义的一些格式，与Unix不兼容。下面给出目前embryo支持的几种文件类型的路径格式：

	（1）tftp远端文件：路径参数格式为“tftp://tftp服务器IP/文件名”，以该路径调用文件接口将直接访问指定服务器上的文件，底层的tftp传输过程对调用者透明，而调用者就像访问本地文件一样

	（2）字符设备：路径参数格式为“/dev/char/字符设备名”，目前embryo并没有任何字符类型设备

	（3）块设备：块设备访问形式分为原始块设备访问方式和基于文件系统的块设备访问方式，以原始方式访问时格式为“/dev/block/设备名”，这里的设备名请参考《设备类型说明》一文，此种访问方式是以设备为导向的，而并不涉及到具体的一般文件，仅直接对物理外设进行符合其行为的IO操作，一般而言，这种类型的访问需要给出具体的设备名、访问地址、访问数据量等信息。值得一提的是，与linux实现方式不同，block的意思仅表示要访问的设备是一个块设备，对于调用者而言，其调用的接口还是以字符设备的串行访问形式，目前不支持直接对设备的块IO访问（除非调用驱动层的接口，但违背了分层设计原则，具体请查看ata_read/ata_write命令实现）。对块设备的另一种访问形式为带文件系统的访问，格式为“/dev/fs/文件系统名/设备名/文件名”，该方式以具体目标文件（普通文件）为导向，需要给出该文件所在的物理设备、文件系统类型、文件路径等必要信息，由于是基于具体文件的，因此这种访问方式不直接面向具体的存储介质，而是为所有的存储设备提供一套统一的访问接口。这种访问方式与Unix访问本地文件很像，而Unix无非是将文件提供类型、物理外设这些信息对调用者隐藏了

	（2）网络套接字：路径参数格式为“/dev/socket”，一般不直接调用open打开一个套接字，而是通过socket()系统调用来实现一个socket打开，但是socket设备文件是存在的，允许对一个socket返回的描述符进行read/write操作

	（3）终端设备：路径参数格式为“/dev/ttyX”，目前embryo支持的终端包括串口、显示器、键盘。很少通过文件接口直接操作这些终端设备，而是通过标准IO间接调用并访问这些终端设备

